#!groovy
properties([disableConcurrentBuilds()])
    //agent any
    //tools { maven 'Maven' }
    pipeline {
        //agent any
        agent {label 'master'}
        tools { maven 'maven' }
        options {
            buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
            timestamps()
        }
        stages {
            stage('Preparation') {
                steps {
                    echo "-=- Cleaning project -=-"
                    sh "./mvnw clean"
                }
            }
            stage('Compile') {
                steps {
                    echo "-=- compiling project -=-"
                    sh "./mvnw compile"
                }
            }
            stage('Testing') {
                steps {
                    echo "-=- Testing -=-"
                    sh "./mvnw test"
                }
            }
            stage('Building project') {
                steps {
                   echo "-=- Build project -=-"
                   sh "./mvnw install -Dmaven.test.skip=true"
                }
            }
            stage('Building docker image') {
                steps {
                    echo "-=- Building docker image -=-"
                    sh "cp ${workspace}/target/spring-petclinic-2.2.0.BUILD-SNAPSHOT.jar ${workspace}/jenkins_file/spring-petclinic-2.2.0.BUILD-SNAPSHOT.jar"
                    script {
                        dir ("${workspace}/jenkins_file") {
                        //sh 'cp /var/jenkins_home/workspace/build-pc/ '
                        dockerImage=docker.build("127.0.0.1:5000/petclinic:latest")
                        //withDockerRegistry(registry: [url: 'localhost:5000'])
                        //    docker.withRegistry("https://127.0.0.1:5000") {
                        //        dockerImage.push()
                        //    }
                        }
                    }
                }
            }
            stage('Send Image in registry') {
                steps{
                    echo "-=- Sending image in registry -=-"
                    script {
                        docker.withRegistry( 'https://127.0.0.1:5000' ){
                            dockerImage.push()
                        }
                    }
                }
            }
            stage('Deploy Image') {
                steps{
                    echo "-=- Deploy image -=-"
                    //sh 'ssh vagrant@10.23.27.8 \'./start\''
                    sh 'ssh vagrant@192.168.2.113 \'./start\''
                    //sh 'pwd'
                    //sh 'exit'
                }
            }
        }
    }
